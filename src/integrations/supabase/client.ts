
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wzsdjyhiomkxjzaruhsz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind6c2RqeWhpb21reGp6YXJ1aHN6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI5MTEzMzMsImV4cCI6MjA1ODQ4NzMzM30.bcTPNevS7R1Og6HtJp7bYRTbSJ2jIUq8TDEcYXyfclM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create client with anonymous permissions for public data access
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    // We're using localStorage for local authentication only now
    // Supabase credentials aren't used for authentication
    autoRefreshToken: false,
    persistSession: false
  }
});

// Helper function to upload files to Supabase storage
export const uploadProductImage = async (file: File): Promise<string | null> => {
  try {
    // Create a unique file name
    const fileExt = file.name.split('.').pop();
    const fileName = `${Math.random().toString(36).substring(2, 15)}_${Date.now()}.${fileExt}`;
    const filePath = `products/${fileName}`;
    
    console.log("Uploading file to Supabase storage:", filePath);
    
    // Upload the file to Supabase storage
    const { data, error } = await supabase.storage
      .from('products')
      .upload(filePath, file, {
        cacheControl: '3600',
        upsert: false
      });
    
    if (error) {
      console.error("Erro ao fazer upload da imagem:", error);
      return null;
    }
    
    // Get the public URL for the uploaded file
    const { data: { publicUrl } } = supabase.storage
      .from('products')
      .getPublicUrl(filePath);
    
    console.log("Imagem carregada com sucesso:", publicUrl);
    return publicUrl;
  } catch (error) {
    console.error("Erro no processo de upload:", error);
    return null;
  }
};
